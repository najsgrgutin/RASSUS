{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/matejjuric/Desktop/Frontend/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Router from \"next/router\";\nimport styles from \"../styles/Login.module.css\";\nimport ErrorMessage from \"../components/ErrorMessage\";\n\nvar Login = function Login() {\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var _useState = useState(false),\n      showError = _useState[0],\n      setShowError = _useState[1];\n\n  function handleLoginClick(data) {\n    var user = {\n      username: data.user.username,\n      password: data.user.password\n    };\n    fetch(\"http://localhost:3000/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: _JSON$stringify(user)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      if (res.token) {\n        localStorage.setItem(\"token\", res.token);\n        Router.push(\"/\");\n      } else setShowError(true);\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  }\n\n  return __jsx(\"form\", {\n    className: styles.loginContainer,\n    onSubmit: handleSubmit(handleLoginClick),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: styles.loginTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"input\", {\n    className: styles.loginInput,\n    placeholder: \"Username\",\n    name: \"user.username\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: styles.mailErrorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, errors[\"user.username\"] && errors[\"user.username\"].message), __jsx(\"input\", {\n    className: styles.loginInput,\n    placeholder: \"Password\",\n    name: \"user.password\",\n    type: \"password\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: styles.rememberMeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: \"user.rememberMe\",\n    name: \"user.rememberMe\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    className: styles.rememberMeText,\n    htmlFor: \"user.rememberMe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Remember me\")), __jsx(\"button\", {\n    className: styles.loginButton,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Login\"), showError ? __jsx(ErrorMessage, {\n    message: \"Wrong username or password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }) : null);\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/matejjuric/Desktop/Frontend/pages/login.js"],"names":["React","useState","useForm","Router","styles","ErrorMessage","Login","register","handleSubmit","errors","showError","setShowError","handleLoginClick","data","user","username","password","fetch","method","headers","body","then","res","json","token","localStorage","setItem","push","error","console","log","loginContainer","loginTitle","loginInput","required","mailErrorMessage","message","rememberMeContainer","rememberMeText","loginButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Router from \"next/router\";\nimport styles from \"../styles/Login.module.css\";\nimport ErrorMessage from \"../components/ErrorMessage\";\n\nconst Login = () => {\n  const { register, handleSubmit, errors } = useForm();\n\n  const [showError, setShowError] = useState(false);\n\n  function handleLoginClick(data) {\n    const user = {\n      username: data.user.username,\n      password: data.user.password\n    };\n    fetch(\"http://localhost:3000/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.token) {\n          localStorage.setItem(\"token\", res.token);\n          Router.push(\"/\");\n        } else setShowError(true);\n      })\n      .catch(error => console.log(error));\n  }\n\n  return (\n    <form\n      className={styles.loginContainer}\n      onSubmit={handleSubmit(handleLoginClick)}\n    >\n      <h1 className={styles.loginTitle}>Login</h1>\n      <input\n        className={styles.loginInput}\n        placeholder=\"Username\"\n        name=\"user.username\"\n        ref={register({\n          required: true\n        })}\n      />\n      <div className={styles.mailErrorMessage}>\n        {errors[\"user.username\"] && errors[\"user.username\"].message}\n      </div>\n      <input\n        className={styles.loginInput}\n        placeholder=\"Password\"\n        name=\"user.password\"\n        type=\"password\"\n        ref={register({\n          required: true\n        })}\n      />\n      <div className={styles.rememberMeContainer}>\n        <input\n          type=\"checkbox\"\n          id=\"user.rememberMe\"\n          name=\"user.rememberMe\"\n          ref={register}\n        />\n        <label className={styles.rememberMeText} htmlFor=\"user.rememberMe\">\n          Remember me\n        </label>\n      </div>\n      <button className={styles.loginButton} type=\"submit\">\n        Login\n      </button>\n      {showError ? (\n        <ErrorMessage message={\"Wrong username or password\"} />\n      ) : null}\n    </form>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}